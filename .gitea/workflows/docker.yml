name: Docker multi-arch build and push

on:
  push:
  pull_request:


jobs:
  build:
    name: Build Docker image (${{ matrix.arch }})
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ vars.REGISTRY_URL }}/${{ github.repository_owner }}/${{ github.repository }}
    strategy:
      matrix:
        arch: [linux/amd64]

    steps:
      - name: Checkout current repo
        uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Login to ghcr registry
        uses: docker/login-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ${{ vars.REGISTRY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_TAG }}

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.arch }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # - name: Tag and push image
      #   if: ${{ github.event_name != 'pull_request' }}
      #   run: |
      #     docker tag tdlightbotapi:${{ env.HASH_VERSION }}-${{ env.SAFE_ARCH }} ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-${{ env.SAFE_ARCH }}
      #     docker tag tdlightbotapi:${{ env.HASH_VERSION }}-${{ env.SAFE_ARCH }} ${{ env.IMAGE_TAG }}:${{ env.VERSION }}-${{ env.SAFE_ARCH }}
      #     docker push ${{ env.IMAGE_TAG}}:${{ env.HASH_VERSION}}-${{ env.SAFE_ARCH }}
      #     docker push ${{ env.IMAGE_TAG }}:${{ env.VERSION }}-${{ env.SAFE_ARCH }}

      # - name: Save image as tar archive
      #   if: ${{ github.event_name != 'pull_request' }}
      #   run: |
      #     docker save ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-${{ env.SAFE_ARCH }} -o ${{ env.SAFE_ARCH }}.tar

      # - name: Save image as tar archive (pull request)
      #   if: ${{ github.event_name == 'pull_request' }}
      #   run: |
      #     docker save tdlightbotapi:${{ env.HASH_VERSION }}-${{ env.SAFE_ARCH }} -o ${{ env.SAFE_ARCH }}.tar

      # - name: Upload image as artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: image_${{ env.SAFE_ARCH }}
      #     path: ${{ env.SAFE_ARCH }}.tar

  # push-manifest:
    # name: Create and push multi-arch Docker manifest
    # runs-on: ubuntu-latest
    # if: ${{ github.event_name != 'pull_request' }}
    # env:
    #   DOCKER_CLI_EXPERIMENTAL: enabled
    # needs: build

    # steps:
    #   - name: Download artifacts
    #     uses: actions/download-artifact@v2

    #   - name: Load environment info and built images
    #     run: |
    #       cat github_env/github.env > $GITHUB_ENV
    #       docker load --input image_linux386/linux386.tar
    #       docker load --input image_linuxamd64/linuxamd64.tar
    #       docker load --input image_linuxarmv6/linuxarmv6.tar
    #       docker load --input image_linuxarmv7/linuxarmv7.tar
    #       docker load --input image_linuxarm64/linuxarm64.tar
    #       docker load --input image_linuxppc64le/linuxppc64le.tar

    #   - name: Login to ghcr registry
    #     uses: docker/login-action@v2
    #     with:
    #       registry: ghcr.io
    #       username: ${{ secrets.GH_USERNAME }}
    #       password: ${{ secrets.GH_ACCESS_TOKEN }}

    #   - name: Create and push manifest
    #     run: |
    #       # -- Push to ghcr.io
    #       docker manifest create ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }} \
    #       --amend ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-linux386 \
    #       --amend ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-linuxamd64 \
    #       --amend ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-linuxarmv6 \
    #       --amend ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-linuxarmv7 \
    #       --amend ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-linuxarm64 \
    #       --amend ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-linuxppc64le
    #       #docker manifest push ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}

    #       # Tag images as VERSION (like 'latest')
    #       docker tag ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-linux386 ${{ env.IMAGE_TAG }}:${{ env.VERSION }}-linux386
    #       docker tag ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-linuxamd64 ${{ env.IMAGE_TAG }}:${{ env.VERSION }}-linuxamd64
    #       docker tag ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-linuxarmv6 ${{ env.IMAGE_TAG }}:${{ env.VERSION }}-linuxarmv6
    #       docker tag ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-linuxarmv7 ${{ env.IMAGE_TAG }}:${{ env.VERSION }}-linuxarmv7
    #       docker tag ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-linuxarm64 ${{ env.IMAGE_TAG }}:${{ env.VERSION }}-linuxarm64
    #       docker tag ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-linuxppc64le ${{ env.IMAGE_TAG }}:${{ env.VERSION }}-linuxppc64le

    #       docker manifest create ${{ env.IMAGE_TAG }}:${{ env.VERSION }} \
    #       --amend ${{ env.IMAGE_TAG }}:${{ env.VERSION }}-linux386 \
    #       --amend ${{ env.IMAGE_TAG }}:${{ env.VERSION }}-linuxamd64 \
    #       --amend ${{ env.IMAGE_TAG }}:${{ env.VERSION }}-linuxarmv6 \
    #       --amend ${{ env.IMAGE_TAG }}:${{ env.VERSION }}-linuxarmv7 \
    #       --amend ${{ env.IMAGE_TAG }}:${{ env.VERSION }}-linuxarm64 \
    #       --amend ${{ env.IMAGE_TAG }}:${{ env.VERSION }}-linuxppc64le
    #       #docker manifest push ${{ env.IMAGE_TAG }}:${{ env.VERSION }}

    #       # Tag images as VERSION (like 'latest')
    #       # docker tag ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-linux386 ${{ env.IMAGE_TAG_DH }}:${{ env.VERSION }}-linux386
    #       # docker tag ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-linuxamd64 ${{ env.IMAGE_TAG_DH }}:${{ env.VERSION }}-linuxamd64
    #       # docker tag ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-linuxarmv6 ${{ env.IMAGE_TAG_DH }}:${{ env.VERSION }}-linuxarmv6
    #       # docker tag ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-linuxarmv7 ${{ env.IMAGE_TAG_DH }}:${{ env.VERSION }}-linuxarmv7
    #       # docker tag ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-linuxarm64 ${{ env.IMAGE_TAG_DH }}:${{ env.VERSION }}-linuxarm64
    #       # docker tag ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-linuxppc64le ${{ env.IMAGE_TAG_DH }}:${{ env.VERSION }}-linuxppc64le
