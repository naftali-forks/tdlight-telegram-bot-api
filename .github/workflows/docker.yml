name: Docker multi-arch build and push

on:
  push:
  pull_request:

jobs:
  build:
    name: Build Docker image (${{ matrix.arch }})
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ghcr.io/${{ github.repository_owner }}/tdlightbotapi
    strategy:
      matrix:
        arch: [linux/amd64]

    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4.1.4
        with:
          submodules: "recursive"

      - name: Get version
        run: |
          # Get latest commit short hash
          HASH_VERSION=$(git rev-parse --short HEAD)

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          # Convert IMAGE_TAG, HASH_VERSION and VERSION to lowercase (repository name must be lowercase)
          IMAGE_TAG=$(echo "$IMAGE_TAG" | awk '{print tolower($0)}')
          HASH_VERSION=$(echo "$HASH_VERSION" | awk '{print tolower($0)}')
          VERSION=$(echo "$VERSION" | awk '{print tolower($0)}')
          ARCH=${{ matrix.arch }}
          SAFE_ARCH=${ARCH///}  # linux/amd64 -> linuxamd64

          # Store variable for future use
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "HASH_VERSION=$HASH_VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "SAFE_ARCH=$SAFE_ARCH" >> $GITHUB_ENV

          # Print debug info
          echo "hash version: $HASH_VERSION"
          echo "version: $VERSION"
          echo "safe arch: $SAFE_ARCH"

          # Save env to file
          cat $GITHUB_ENV > github.env

      - name: Upload environment info as artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: github_env
          path: github.env

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Cache Docker layers
        uses: actions/cache@v4.0.2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.SAFE_ARCH }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ env.SAFE_ARCH }}-

      - name: Login to ghcr registry
        uses: docker/login-action@v3.1.0
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN}}

      - name: Build image
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          file: ./Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
          platforms: ${{ matrix.arch }}
          push: true
          tags: |
            tdlightbotapi:${{ env.HASH_VERSION }}-${{ env.SAFE_ARCH }}

      - name: Tag and push image
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker tag tdlightbotapi:${{ env.HASH_VERSION }}-${{ env.SAFE_ARCH }} ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-${{ env.SAFE_ARCH }}
          docker tag tdlightbotapi:${{ env.HASH_VERSION }}-${{ env.SAFE_ARCH }} ${{ env.IMAGE_TAG }}:${{ env.VERSION }}-${{ env.SAFE_ARCH }}
          docker tag tdlightbotapi:${{ env.HASH_VERSION }}-${{ env.SAFE_ARCH }} ${{ env.IMAGE_TAG }}:latest
          docker push ${{ env.IMAGE_TAG}}:${{ env.HASH_VERSION}}-${{ env.SAFE_ARCH }}
          docker push ${{ env.IMAGE_TAG }}:${{ env.VERSION }}-${{ env.SAFE_ARCH }}
          docker push ${{ env.IMAGE_TAG}}:latest
          
      - name: Save image as tar archive
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker save ${{ env.IMAGE_TAG }}:${{ env.HASH_VERSION }}-${{ env.SAFE_ARCH }} -o ${{ env.SAFE_ARCH }}.tar

      - name: Save image as tar archive (pull request)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          docker save tdlightbotapi:${{ env.HASH_VERSION }}-${{ env.SAFE_ARCH }} -o ${{ env.SAFE_ARCH }}.tar

      - name: Upload image as artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: image_${{ env.SAFE_ARCH }}
          path: ${{ env.SAFE_ARCH }}.tar
